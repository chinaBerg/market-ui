{"version":3,"sources":["webpack:///examples/docs/zh_CN/tree.vue","webpack:///./examples/docs/zh_CN/tree.md?c0a7","webpack:///./examples/docs/zh_CN/tree.md"],"names":["democomponentExport","tree","name","components","element-demo0","extends_default","render","_h","this","$createElement","_c","_self","attrs","data","list","staticRenderFns","label","children","element-demo1","show-checkbox","childrenNodes","element-demo2","node-key","default-expand-all","default-checked-keys","id","disabled","element-demo3","_vm","_v","default-expanded-keys","element-demo4","methods","setCheckedKeys","$refs","setCheckedNodes","getCheckedNodes","nodes","console","log","$message","success","getCheckedKeys","resetChecked","ref","type","on","click","element-demo5","accordion","element-demo6","renderContent","h","_ref","_this","parent","class","style","margin","props","size","nativeOn","e","remove","append","push","$set","stopPropagation","index","indexOf","splice","handleToggle","node","handleChecked","render-content","toggle-change","checked-change","zh_CN_tree","staticClass","slot","pre","_m","staticStyle","text-align","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/1.45249cb09e24d5b00b9f.js","sourcesContent":["\n    <template>\n      <section class=\"market-doc-container\">\n        <h2>Tree 树形控件</h2>\n<h3>基本使用</h3>\n<p>基本的Tree数据结构展示</p>\n<mku-example>\n        \n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;mku-tree :data=&quot;list&quot; /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            children: [\n              {\n                label: 'node2-1',\n                children: [\n                  {\n                    label: 'node3-1'\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                children: [\n                  {\n                    label: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            children: [\n              {\n                label: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></mku-example><h3>可选择</h3>\n<p>支持层级选择，同时这个例子还演示了自定义数据结构的键名。</p>\n<mku-example>\n        \n        <template slot=\"source\"><element-demo1 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;mku-tree\n      show-checkbox\n      label=&quot;name&quot;\n      children=&quot;childrenNodes&quot;\n      :data=&quot;list&quot;\n    /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            name: 'node1-1',\n            childrenNodes: [\n              {\n                name: 'node2-1',\n                childrenNodes: [\n                  {\n                    name: 'node3-1'\n                  }\n                ]\n              },\n              {\n                name: 'node2-2',\n                childrenNodes: [\n                  {\n                    name: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            name: 'node1-2',\n            childrenNodes: [\n              {\n                name: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></mku-example><h3>禁用项</h3>\n<p>在节点数据上添加disabled属性设置禁用。</p>\n<mku-example>\n        \n        <template slot=\"source\"><element-demo2 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;mku-tree\n      show-checkbox\n      node-key=&quot;id&quot;\n      :data=&quot;list&quot;\n      default-expand-all\n      :default-checked-keys=&quot;[3]&quot;\n    /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            id: 1,\n            label: 'node1-1',\n            disabled: true,\n            children: [\n              {\n                id: 2,\n                label: 'node2-1',\n                disabled: true,\n                children: [\n                  {\n                    id: 3,\n                    label: 'node3-1',\n                    disabled: true\n                  }\n                ]\n              },\n              {\n                id: 4,\n                label: 'node2-2',\n                children: [\n                  {\n                    id: 5,\n                    label: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            id: 6,\n            label: 'node1-2',\n            children: [\n              {\n                id: 7,\n                label: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></mku-example><h3>默认展开和选中</h3>\n<p>支持默认展开和选中，但是必须要设置node-key属性。\n支持默认展开所有选项</p>\n<mku-example>\n        \n        <template slot=\"source\"><element-demo3 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;自定义展开和选中：&lt;/p&gt;\n    &lt;mku-tree\n      :data=&quot;list&quot;\n      show-checkbox\n      node-key=&quot;id&quot;\n      :default-expanded-keys=&quot;[1]&quot;\n      :default-checked-keys=&quot;[2, 7]&quot;\n    /&gt;\n\n    &lt;br&gt;\n    &lt;p&gt;展开所有项：&lt;/p&gt;\n    &lt;mku-tree\n      :data=&quot;list&quot;\n      show-checkbox\n      default-expand-all\n    /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></mku-example><h3>节点的设置和获取</h3>\n<mku-example>\n        \n        <template slot=\"source\"><element-demo4 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;mku-tree\n      ref=&quot;tree&quot;\n      :data=&quot;list&quot;\n      node-key=&quot;id&quot;\n      show-checkbox\n      default-expand-all\n    /&gt;\n\n    &lt;br&gt;\n    &lt;div&gt;\n      &lt;mku-button type=&quot;primary&quot; @click=&quot;setCheckedKeys&quot;&gt;通过node-key设置选中&lt;/mku-button&gt;\n      &lt;mku-button type=&quot;primary&quot; @click=&quot;setCheckedNodes&quot;&gt;通过node数据节点设置选中&lt;/mku-button&gt;\n      &lt;mku-button type=&quot;primary&quot; @click=&quot;getCheckedKeys&quot;&gt;获取选中项的keys数组&lt;/mku-button&gt;\n      &lt;mku-button type=&quot;primary&quot; @click=&quot;getCheckedNodes&quot;&gt;获取选中项的数据数组&lt;/mku-button&gt;\n      &lt;mku-button type=&quot;primary&quot; @click=&quot;resetChecked&quot;&gt;重置所有选中项目&lt;/mku-button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    },\n    methods: {\n      setCheckedKeys () {\n        this.$refs.tree.setCheckedKeys([3])\n      },\n      setCheckedNodes () {\n        this.$refs.tree.setCheckedNodes([\n          { label: 'node3-1', id: 5 }\n        ])\n      },\n      getCheckedNodes () {\n        const nodes = this.$refs.tree.getCheckedNodes()\n        console.log(nodes)\n        this.$message.success('节点获取成功，请在控制台查看')\n      },\n      getCheckedKeys () {\n        const nodes = this.$refs.tree.getCheckedKeys()\n        console.log(nodes)\n        this.$message.success('节点获取成功，请在控制台查看')\n      },\n      resetChecked () {\n        this.$refs.tree.setCheckedKeys([])\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></mku-example><h3>手风琴模式</h3>\n<p>手风琴模式，只允许同时展开一个节点。</p>\n<mku-example>\n        \n        <template slot=\"source\"><element-demo5 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;mku-tree :data=&quot;list&quot; accordion /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></mku-example><h3>自定义渲染节点内容</h3>\n<mku-example>\n        \n        <template slot=\"source\"><element-demo6 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;mku-tree\n      show-checkbox\n      default-expand-all\n      :data=&quot;list&quot;\n      :render-content=&quot;renderContent&quot;\n      @toggle-change=&quot;handleToggle&quot;\n      @checked-change=&quot;handleChecked&quot;\n    /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    },\n    methods: {\n      renderContent (h, { data, parent }) {\n        return h('div', {\n          class: 'doc-tree__item'\n        }, [\n          h('span', {\n            class: 'doc-tree__label'\n          }, data.label),\n          h('mku-button', {\n            style: {\n              margin: '0 10px'\n            },\n            props: {\n              size: 'small'\n            },\n            nativeOn: {\n              click: (e) =&gt; this.remove(data, parent, e)\n            }\n          }, '-'),\n          h('mku-button', {\n            props: {\n              size: 'small'\n            },\n            nativeOn: {\n              click: (e) =&gt; this.append(data, e)\n            }\n          }, '+')\n        ])\n      },\n      append (data, e) {\n        let children = data.children || []\n        children.push({\n          label: 'children-node'\n        })\n        this.$set(data, 'children', children)\n        e.stopPropagation()\n      },\n      remove (data, parent, e) {\n        const index = parent.indexOf(data)\n        if (index &gt; -1) {\n          parent.splice(index, 1)\n        }\n        e.stopPropagation()\n      },\n      handleToggle (data, node) {\n        console.log(data, node)\n      },\n      handleChecked (nodes, data) {\n        console.log(nodes, data)\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre></template></mku-example><h3>Tree Attributes</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">可选值</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">必选</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">data</td>\n<td style=\"text-align:left\">数据对象</td>\n<td style=\"text-align:left\"><code>Array</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">是</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">node-key</td>\n<td style=\"text-align:left\">每个树节点的标识，该值在整个tree内应该是唯一的</td>\n<td style=\"text-align:left\"><code>String | Number</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">label</td>\n<td style=\"text-align:left\">定义子节点名称在data数据对象中的键名</td>\n<td style=\"text-align:left\"><code>String</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\"><code>label</code></td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">children</td>\n<td style=\"text-align:left\">定义子节点数据在data数据对象中的键名</td>\n<td style=\"text-align:left\"><code>String</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\"><code>children</code></td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">show-checkbox</td>\n<td style=\"text-align:left\">节点可被选择</td>\n<td style=\"text-align:left\"><code>Boolean</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">default-expanded-keys</td>\n<td style=\"text-align:left\">设置默认的展开项</td>\n<td style=\"text-align:left\"><code>Array</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">default-expand-all</td>\n<td style=\"text-align:left\">设置默认所有项展开</td>\n<td style=\"text-align:left\"><code>Boolean</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">default-checked-keys</td>\n<td style=\"text-align:left\">设置默认的选中项</td>\n<td style=\"text-align:left\"><code>Array</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">accordion</td>\n<td style=\"text-align:left\">只允许同时展开一个节点</td>\n<td style=\"text-align:left\"><code>Boolean</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">render-content</td>\n<td style=\"text-align:left\">自定义渲染内容，第一个参数为节点数据，第二个参数为父节点数据</td>\n<td style=\"text-align:left\"><code>Function</code></td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">expand-on-click-node</td>\n<td style=\"text-align:left\">点击节点时是否可以展开收起</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\"><code>true</code></td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">check-on-click-node</td>\n<td style=\"text-align:left\">点击节点时是否可以选中/取消，仅<code>show-checkbox</code>开始时有效</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">是否禁用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\"><code>true</code>、<code>false</code></td>\n<td style=\"text-align:left\"><code>false</code></td>\n<td style=\"text-align:left\"><code>true</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Tree Events</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">回调函数参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">toggle-change</td>\n<td style=\"text-align:left\">展开/收起子节点时触发</td>\n<td style=\"text-align:left\">当前节点</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checked-change</td>\n<td style=\"text-align:left\">节点选中/取消时触发</td>\n<td style=\"text-align:left\">所有选中节点的数组、当前节点数据</td>\n</tr>\n</tbody>\n</table>\n<h3>Tree Methods</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">getCheckedKeys</td>\n<td style=\"text-align:left\">返回所有选中节点的key组成的数组</td>\n<td style=\"text-align:left\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCheckedNodes</td>\n<td style=\"text-align:left\">返回所有选中节点的数据组成的数组</td>\n<td style=\"text-align:left\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setCheckedKeys</td>\n<td style=\"text-align:left\">通过key设置选中的节点</td>\n<td style=\"text-align:left\">key数组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setCheckedNodes</td>\n<td style=\"text-align:left\">通过node节点数据设置选中的节点</td>\n<td style=\"text-align:left\">节点数据数组</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('mku-tree',{attrs:{\"data\":_vm.list}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            children: [\n              {\n                label: 'node2-1',\n                children: [\n                  {\n                    label: 'node3-1'\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                children: [\n                  {\n                    label: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            children: [\n              {\n                label: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo1\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('mku-tree',{attrs:{\"show-checkbox\":\"\",\"label\":\"name\",\"children\":\"childrenNodes\",\"data\":_vm.list}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        list: [\n          {\n            name: 'node1-1',\n            childrenNodes: [\n              {\n                name: 'node2-1',\n                childrenNodes: [\n                  {\n                    name: 'node3-1'\n                  }\n                ]\n              },\n              {\n                name: 'node2-2',\n                childrenNodes: [\n                  {\n                    name: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            name: 'node1-2',\n            childrenNodes: [\n              {\n                name: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo2\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('mku-tree',{attrs:{\"show-checkbox\":\"\",\"node-key\":\"id\",\"data\":_vm.list,\"default-expand-all\":\"\",\"default-checked-keys\":[3]}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        list: [\n          {\n            id: 1,\n            label: 'node1-1',\n            disabled: true,\n            children: [\n              {\n                id: 2,\n                label: 'node2-1',\n                disabled: true,\n                children: [\n                  {\n                    id: 3,\n                    label: 'node3-1',\n                    disabled: true\n                  }\n                ]\n              },\n              {\n                id: 4,\n                label: 'node2-2',\n                children: [\n                  {\n                    id: 5,\n                    label: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            id: 6,\n            label: 'node1-2',\n            children: [\n              {\n                id: 7,\n                label: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo3\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('p',[_vm._v(\"自定义展开和选中：\")]),_vm._v(\" \"),_c('mku-tree',{attrs:{\"data\":_vm.list,\"show-checkbox\":\"\",\"node-key\":\"id\",\"default-expanded-keys\":[1],\"default-checked-keys\":[2, 7]}}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('p',[_vm._v(\"展开所有项：\")]),_vm._v(\" \"),_c('mku-tree',{attrs:{\"data\":_vm.list,\"show-checkbox\":\"\",\"default-expand-all\":\"\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo4\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('mku-tree',{ref:\"tree\",attrs:{\"data\":_vm.list,\"node-key\":\"id\",\"show-checkbox\":\"\",\"default-expand-all\":\"\"}}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',[_c('mku-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.setCheckedKeys}},[_vm._v(\"通过node-key设置选中\")]),_vm._v(\" \"),_c('mku-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.setCheckedNodes}},[_vm._v(\"通过node数据节点设置选中\")]),_vm._v(\" \"),_c('mku-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getCheckedKeys}},[_vm._v(\"获取选中项的keys数组\")]),_vm._v(\" \"),_c('mku-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getCheckedNodes}},[_vm._v(\"获取选中项的数据数组\")]),_vm._v(\" \"),_c('mku-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.resetChecked}},[_vm._v(\"重置所有选中项目\")])],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    },\n    methods: {\n      setCheckedKeys () {\n        this.$refs.tree.setCheckedKeys([3])\n      },\n      setCheckedNodes () {\n        this.$refs.tree.setCheckedNodes([\n          { label: 'node3-1', id: 5 }\n        ])\n      },\n      getCheckedNodes () {\n        const nodes = this.$refs.tree.getCheckedNodes()\n        console.log(nodes)\n        this.$message.success('节点获取成功，请在控制台查看')\n      },\n      getCheckedKeys () {\n        const nodes = this.$refs.tree.getCheckedKeys()\n        console.log(nodes)\n        this.$message.success('节点获取成功，请在控制台查看')\n      },\n      resetChecked () {\n        this.$refs.tree.setCheckedKeys([])\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo5\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('mku-tree',{attrs:{\"data\":_vm.list,\"accordion\":\"\"}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\"element-demo6\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('mku-tree',{attrs:{\"show-checkbox\":\"\",\"default-expand-all\":\"\",\"data\":_vm.list,\"render-content\":_vm.renderContent},on:{\"toggle-change\":_vm.handleToggle,\"checked-change\":_vm.handleChecked}})],1)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    },\n    methods: {\n      renderContent (h, { data, parent }) {\n        return h('div', {\n          class: 'doc-tree__item'\n        }, [\n          h('span', {\n            class: 'doc-tree__label'\n          }, data.label),\n          h('mku-button', {\n            style: {\n              margin: '0 10px'\n            },\n            props: {\n              size: 'small'\n            },\n            nativeOn: {\n              click: (e) => this.remove(data, parent, e)\n            }\n          }, '-'),\n          h('mku-button', {\n            props: {\n              size: 'small'\n            },\n            nativeOn: {\n              click: (e) => this.append(data, e)\n            }\n          }, '+')\n        ])\n      },\n      append (data, e) {\n        let children = data.children || []\n        children.push({\n          label: 'children-node'\n        })\n        this.$set(data, 'children', children)\n        e.stopPropagation()\n      },\n      remove (data, parent, e) {\n        const index = parent.indexOf(data)\n        if (index > -1) {\n          parent.splice(index, 1)\n        }\n        e.stopPropagation()\n      },\n      handleToggle (data, node) {\n        console.log(data, node)\n      },\n      handleChecked (nodes, data) {\n        console.log(nodes, data)\n      }\n    }\n  }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  \n\n\n// WEBPACK FOOTER //\n// examples/docs/zh_CN/tree.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"market-doc-container\"},[_c('h2',[_vm._v(\"Tree 树形控件\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"基本使用\")]),_vm._v(\" \"),_c('p',[_vm._v(\"基本的Tree数据结构展示\")]),_vm._v(\" \"),_c('mku-example',[_c('template',{slot:\"source\"},[_c('element-demo0')],1),_vm._v(\" \"),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <mku-tree :data=\\\"list\\\" />\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        list: [\\n          {\\n            label: 'node1-1',\\n            children: [\\n              {\\n                label: 'node2-1',\\n                children: [\\n                  {\\n                    label: 'node3-1'\\n                  }\\n                ]\\n              },\\n              {\\n                label: 'node2-2',\\n                children: [\\n                  {\\n                    label: 'node3-1'\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            label: 'node1-2',\\n            children: [\\n              {\\n                label: 'node2-1'\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_c('h3',[_vm._v(\"可选择\")]),_vm._v(\" \"),_c('p',[_vm._v(\"支持层级选择，同时这个例子还演示了自定义数据结构的键名。\")]),_vm._v(\" \"),_c('mku-example',[_c('template',{slot:\"source\"},[_c('element-demo1')],1),_vm._v(\" \"),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <mku-tree\\n      show-checkbox\\n      label=\\\"name\\\"\\n      children=\\\"childrenNodes\\\"\\n      :data=\\\"list\\\"\\n    />\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        list: [\\n          {\\n            name: 'node1-1',\\n            childrenNodes: [\\n              {\\n                name: 'node2-1',\\n                childrenNodes: [\\n                  {\\n                    name: 'node3-1'\\n                  }\\n                ]\\n              },\\n              {\\n                name: 'node2-2',\\n                childrenNodes: [\\n                  {\\n                    name: 'node3-1'\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            name: 'node1-2',\\n            childrenNodes: [\\n              {\\n                name: 'node2-1'\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_c('h3',[_vm._v(\"禁用项\")]),_vm._v(\" \"),_c('p',[_vm._v(\"在节点数据上添加disabled属性设置禁用。\")]),_vm._v(\" \"),_c('mku-example',[_c('template',{slot:\"source\"},[_c('element-demo2')],1),_vm._v(\" \"),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <mku-tree\\n      show-checkbox\\n      node-key=\\\"id\\\"\\n      :data=\\\"list\\\"\\n      default-expand-all\\n      :default-checked-keys=\\\"[3]\\\"\\n    />\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        list: [\\n          {\\n            id: 1,\\n            label: 'node1-1',\\n            disabled: true,\\n            children: [\\n              {\\n                id: 2,\\n                label: 'node2-1',\\n                disabled: true,\\n                children: [\\n                  {\\n                    id: 3,\\n                    label: 'node3-1',\\n                    disabled: true\\n                  }\\n                ]\\n              },\\n              {\\n                id: 4,\\n                label: 'node2-2',\\n                children: [\\n                  {\\n                    id: 5,\\n                    label: 'node3-1'\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            id: 6,\\n            label: 'node1-2',\\n            children: [\\n              {\\n                id: 7,\\n                label: 'node2-1'\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_c('h3',[_vm._v(\"默认展开和选中\")]),_vm._v(\" \"),_c('p',[_vm._v(\"支持默认展开和选中，但是必须要设置node-key属性。\\n支持默认展开所有选项\")]),_vm._v(\" \"),_c('mku-example',[_c('template',{slot:\"source\"},[_c('element-demo3')],1),_vm._v(\" \"),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <p>自定义展开和选中：</p>\\n    <mku-tree\\n      :data=\\\"list\\\"\\n      show-checkbox\\n      node-key=\\\"id\\\"\\n      :default-expanded-keys=\\\"[1]\\\"\\n      :default-checked-keys=\\\"[2, 7]\\\"\\n    />\\n\\n    <br>\\n    <p>展开所有项：</p>\\n    <mku-tree\\n      :data=\\\"list\\\"\\n      show-checkbox\\n      default-expand-all\\n    />\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        list: [\\n          {\\n            label: 'node1-1',\\n            id: 1,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 2,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 3\\n                  }\\n                ]\\n              },\\n              {\\n                label: 'node2-2',\\n                id: 4,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 5\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            label: 'node1-2',\\n            id: 6,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 7\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_c('h3',[_vm._v(\"节点的设置和获取\")]),_vm._v(\" \"),_c('mku-example',[_c('template',{slot:\"source\"},[_c('element-demo4')],1),_vm._v(\" \"),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <mku-tree\\n      ref=\\\"tree\\\"\\n      :data=\\\"list\\\"\\n      node-key=\\\"id\\\"\\n      show-checkbox\\n      default-expand-all\\n    />\\n\\n    <br>\\n    <div>\\n      <mku-button type=\\\"primary\\\" @click=\\\"setCheckedKeys\\\">通过node-key设置选中</mku-button>\\n      <mku-button type=\\\"primary\\\" @click=\\\"setCheckedNodes\\\">通过node数据节点设置选中</mku-button>\\n      <mku-button type=\\\"primary\\\" @click=\\\"getCheckedKeys\\\">获取选中项的keys数组</mku-button>\\n      <mku-button type=\\\"primary\\\" @click=\\\"getCheckedNodes\\\">获取选中项的数据数组</mku-button>\\n      <mku-button type=\\\"primary\\\" @click=\\\"resetChecked\\\">重置所有选中项目</mku-button>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        list: [\\n          {\\n            label: 'node1-1',\\n            id: 1,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 2,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 3\\n                  }\\n                ]\\n              },\\n              {\\n                label: 'node2-2',\\n                id: 4,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 5\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            label: 'node1-2',\\n            id: 6,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 7\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    methods: {\\n      setCheckedKeys () {\\n        this.$refs.tree.setCheckedKeys([3])\\n      },\\n      setCheckedNodes () {\\n        this.$refs.tree.setCheckedNodes([\\n          { label: 'node3-1', id: 5 }\\n        ])\\n      },\\n      getCheckedNodes () {\\n        const nodes = this.$refs.tree.getCheckedNodes()\\n        console.log(nodes)\\n        this.$message.success('节点获取成功，请在控制台查看')\\n      },\\n      getCheckedKeys () {\\n        const nodes = this.$refs.tree.getCheckedKeys()\\n        console.log(nodes)\\n        this.$message.success('节点获取成功，请在控制台查看')\\n      },\\n      resetChecked () {\\n        this.$refs.tree.setCheckedKeys([])\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_c('h3',[_vm._v(\"手风琴模式\")]),_vm._v(\" \"),_c('p',[_vm._v(\"手风琴模式，只允许同时展开一个节点。\")]),_vm._v(\" \"),_c('mku-example',[_c('template',{slot:\"source\"},[_c('element-demo5')],1),_vm._v(\" \"),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <mku-tree :data=\\\"list\\\" accordion />\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        list: [\\n          {\\n            label: 'node1-1',\\n            id: 1,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 2,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 3\\n                  }\\n                ]\\n              },\\n              {\\n                label: 'node2-2',\\n                id: 4,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 5\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            label: 'node1-2',\\n            id: 6,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 7\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_c('h3',[_vm._v(\"自定义渲染节点内容\")]),_vm._v(\" \"),_c('mku-example',[_c('template',{slot:\"source\"},[_c('element-demo6')],1),_vm._v(\" \"),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n  <div>\\n    <mku-tree\\n      show-checkbox\\n      default-expand-all\\n      :data=\\\"list\\\"\\n      :render-content=\\\"renderContent\\\"\\n      @toggle-change=\\\"handleToggle\\\"\\n      @checked-change=\\\"handleChecked\\\"\\n    />\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data () {\\n      return {\\n        list: [\\n          {\\n            label: 'node1-1',\\n            id: 1,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 2,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 3\\n                  }\\n                ]\\n              },\\n              {\\n                label: 'node2-2',\\n                id: 4,\\n                children: [\\n                  {\\n                    label: 'node3-1',\\n                    id: 5\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            label: 'node1-2',\\n            id: 6,\\n            children: [\\n              {\\n                label: 'node2-1',\\n                id: 7\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    methods: {\\n      renderContent (h, { data, parent }) {\\n        return h('div', {\\n          class: 'doc-tree__item'\\n        }, [\\n          h('span', {\\n            class: 'doc-tree__label'\\n          }, data.label),\\n          h('mku-button', {\\n            style: {\\n              margin: '0 10px'\\n            },\\n            props: {\\n              size: 'small'\\n            },\\n            nativeOn: {\\n              click: (e) => this.remove(data, parent, e)\\n            }\\n          }, '-'),\\n          h('mku-button', {\\n            props: {\\n              size: 'small'\\n            },\\n            nativeOn: {\\n              click: (e) => this.append(data, e)\\n            }\\n          }, '+')\\n        ])\\n      },\\n      append (data, e) {\\n        let children = data.children || []\\n        children.push({\\n          label: 'children-node'\\n        })\\n        this.$set(data, 'children', children)\\n        e.stopPropagation()\\n      },\\n      remove (data, parent, e) {\\n        const index = parent.indexOf(data)\\n        if (index > -1) {\\n          parent.splice(index, 1)\\n        }\\n        e.stopPropagation()\\n      },\\n      handleToggle (data, node) {\\n        console.log(data, node)\\n      },\\n      handleChecked (nodes, data) {\\n        console.log(nodes, data)\\n      }\\n    }\\n  }\\n</script>\\n\")])])])],2),_c('h3',[_vm._v(\"Tree Attributes\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('h3',[_vm._v(\"Tree Events\")]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('h3',[_vm._v(\"Tree Methods\")]),_vm._v(\" \"),_vm._m(2)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"参数\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"说明\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"类型\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"可选值\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"默认值\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"必选\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"data\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"数据对象\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"Array\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"是\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"node-key\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"每个树节点的标识，该值在整个tree内应该是唯一的\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"String | Number\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"label\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"定义子节点名称在data数据对象中的键名\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"String\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"label\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"children\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"定义子节点数据在data数据对象中的键名\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"String\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"children\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"show-checkbox\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"节点可被选择\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"Boolean\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"false\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"default-expanded-keys\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"设置默认的展开项\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"Array\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"default-expand-all\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"设置默认所有项展开\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"Boolean\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"false\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"default-checked-keys\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"设置默认的选中项\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"Array\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"accordion\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"只允许同时展开一个节点\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"Boolean\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"false\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"render-content\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"自定义渲染内容，第一个参数为节点数据，第二个参数为父节点数据\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"Function\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"expand-on-click-node\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"点击节点时是否可以展开收起\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"Boolean\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"true\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"check-on-click-node\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"点击节点时是否可以选中/取消，仅\"),_c('code',[_vm._v(\"show-checkbox\")]),_vm._v(\"开始时有效\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"Boolean\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"false\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"否\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"disabled\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"是否禁用\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"Boolean\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"true\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"false\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"false\")])]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_c('code',[_vm._v(\"true\")])])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"事件名\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"说明\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"回调函数参数\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"toggle-change\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"展开/收起子节点时触发\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"当前节点\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"checked-change\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"节点选中/取消时触发\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"所有选中节点的数组、当前节点数据\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',[_c('thead',[_c('tr',[_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"方法名\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"说明\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"参数\")])])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"getCheckedKeys\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"返回所有选中节点的key组成的数组\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"getCheckedNodes\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"返回所有选中节点的数据组成的数组\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"-\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"setCheckedKeys\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"通过key设置选中的节点\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"key数组\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"setCheckedNodes\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"通过node节点数据设置选中的节点\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\"节点数据数组\")])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-75395fe9\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./build/md-loader!./examples/docs/zh_CN/tree.md\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!../../../build/md-loader/index.js!./tree.md\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!../../../build/md-loader/index.js!./tree.md\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-75395fe9\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!../../../build/md-loader/index.js!./tree.md\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/docs/zh_CN/tree.md\n// module id = null\n// module chunks = "],"sourceRoot":""}