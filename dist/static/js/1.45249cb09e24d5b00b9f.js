webpackJsonp([1],{Q7Ah:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l,d=n("4YfN"),a=n.n(d),i={name:"component-doc",components:{"element-demo0":a()({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[[t("div",[t("mku-tree",{attrs:{data:this.list}})],1)]],2)},staticRenderFns:[]},{data:function(){return{list:[{label:"node1-1",children:[{label:"node2-1",children:[{label:"node3-1"}]},{label:"node2-2",children:[{label:"node3-1"}]}]},{label:"node1-2",children:[{label:"node2-1"}]}]}}}),"element-demo1":a()({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[[t("div",[t("mku-tree",{attrs:{"show-checkbox":"",label:"name",children:"childrenNodes",data:this.list}})],1)]],2)},staticRenderFns:[]},{data:function(){return{list:[{name:"node1-1",childrenNodes:[{name:"node2-1",childrenNodes:[{name:"node3-1"}]},{name:"node2-2",childrenNodes:[{name:"node3-1"}]}]},{name:"node1-2",childrenNodes:[{name:"node2-1"}]}]}}}),"element-demo2":a()({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[[t("div",[t("mku-tree",{attrs:{"show-checkbox":"","node-key":"id",data:this.list,"default-expand-all":"","default-checked-keys":[3]}})],1)]],2)},staticRenderFns:[]},{data:function(){return{list:[{id:1,label:"node1-1",disabled:!0,children:[{id:2,label:"node2-1",disabled:!0,children:[{id:3,label:"node3-1",disabled:!0}]},{id:4,label:"node2-2",children:[{id:5,label:"node3-1"}]}]},{id:6,label:"node1-2",children:[{id:7,label:"node2-1"}]}]}}}),"element-demo3":a()({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",[n("p",[e._v("自定义展开和选中：")]),e._v(" "),n("mku-tree",{attrs:{data:e.list,"show-checkbox":"","node-key":"id","default-expanded-keys":[1],"default-checked-keys":[2,7]}}),e._v(" "),n("br"),e._v(" "),n("p",[e._v("展开所有项：")]),e._v(" "),n("mku-tree",{attrs:{data:e.list,"show-checkbox":"","default-expand-all":""}})],1)]],2)},staticRenderFns:[]},{data:function(){return{list:[{label:"node1-1",id:1,children:[{label:"node2-1",id:2,children:[{label:"node3-1",id:3}]},{label:"node2-2",id:4,children:[{label:"node3-1",id:5}]}]},{label:"node1-2",id:6,children:[{label:"node2-1",id:7}]}]}}}),"element-demo4":(l={data:function(){return{list:[{label:"node1-1",id:1,children:[{label:"node2-1",id:2,children:[{label:"node3-1",id:3}]},{label:"node2-2",id:4,children:[{label:"node3-1",id:5}]}]},{label:"node1-2",id:6,children:[{label:"node2-1",id:7}]}]}},methods:{setCheckedKeys:function(){this.$refs.tree.setCheckedKeys([3])},setCheckedNodes:function(){this.$refs.tree.setCheckedNodes([{label:"node3-1",id:5}])},getCheckedNodes:function(){var e=this.$refs.tree.getCheckedNodes();console.log(e),this.$message.success("节点获取成功，请在控制台查看")},getCheckedKeys:function(){var e=this.$refs.tree.getCheckedKeys();console.log(e),this.$message.success("节点获取成功，请在控制台查看")},resetChecked:function(){this.$refs.tree.setCheckedKeys([])}}},a()({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",[n("mku-tree",{ref:"tree",attrs:{data:e.list,"node-key":"id","show-checkbox":"","default-expand-all":""}}),e._v(" "),n("br"),e._v(" "),n("div",[n("mku-button",{attrs:{type:"primary"},on:{click:e.setCheckedKeys}},[e._v("通过node-key设置选中")]),e._v(" "),n("mku-button",{attrs:{type:"primary"},on:{click:e.setCheckedNodes}},[e._v("通过node数据节点设置选中")]),e._v(" "),n("mku-button",{attrs:{type:"primary"},on:{click:e.getCheckedKeys}},[e._v("获取选中项的keys数组")]),e._v(" "),n("mku-button",{attrs:{type:"primary"},on:{click:e.getCheckedNodes}},[e._v("获取选中项的数据数组")]),e._v(" "),n("mku-button",{attrs:{type:"primary"},on:{click:e.resetChecked}},[e._v("重置所有选中项目")])],1)],1)]],2)},staticRenderFns:[]},l)),"element-demo5":a()({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[[t("div",[t("mku-tree",{attrs:{data:this.list,accordion:""}})],1)]],2)},staticRenderFns:[]},{data:function(){return{list:[{label:"node1-1",id:1,children:[{label:"node2-1",id:2,children:[{label:"node3-1",id:3}]},{label:"node2-2",id:4,children:[{label:"node3-1",id:5}]}]},{label:"node1-2",id:6,children:[{label:"node2-1",id:7}]}]}}}),"element-demo6":function(){var e={data:function(){return{list:[{label:"node1-1",id:1,children:[{label:"node2-1",id:2,children:[{label:"node3-1",id:3}]},{label:"node2-2",id:4,children:[{label:"node3-1",id:5}]}]},{label:"node1-2",id:6,children:[{label:"node2-1",id:7}]}]}},methods:{renderContent:function(e,t){var n=this,l=t.data,d=t.parent;return e("div",{class:"doc-tree__item"},[e("span",{class:"doc-tree__label"},l.label),e("mku-button",{style:{margin:"0 10px"},props:{size:"small"},nativeOn:{click:function(e){return n.remove(l,d,e)}}},"-"),e("mku-button",{props:{size:"small"},nativeOn:{click:function(e){return n.append(l,e)}}},"+")])},append:function(e,t){var n=e.children||[];n.push({label:"children-node"}),this.$set(e,"children",n),t.stopPropagation()},remove:function(e,t,n){var l=t.indexOf(e);l>-1&&t.splice(l,1),n.stopPropagation()},handleToggle:function(e,t){console.log(e,t)},handleChecked:function(e,t){console.log(e,t)}}};return a()({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",[[t("div",[t("mku-tree",{attrs:{"show-checkbox":"","default-expand-all":"",data:this.list,"render-content":this.renderContent},on:{"toggle-change":this.handleToggle,"checked-change":this.handleChecked}})],1)]],2)},staticRenderFns:[]},e)}()}},s={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"market-doc-container"},[n("h2",[e._v("Tree 树形控件")]),e._v(" "),n("h3",[e._v("基本使用")]),e._v(" "),n("p",[e._v("基本的Tree数据结构展示")]),e._v(" "),n("mku-example",[n("template",{slot:"source"},[n("element-demo0")],1),e._v(" "),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div>\n    <mku-tree :data=\"list\" />\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            children: [\n              {\n                label: 'node2-1',\n                children: [\n                  {\n                    label: 'node3-1'\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                children: [\n                  {\n                    label: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            children: [\n              {\n                label: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n<\/script>\n")])])])],2),n("h3",[e._v("可选择")]),e._v(" "),n("p",[e._v("支持层级选择，同时这个例子还演示了自定义数据结构的键名。")]),e._v(" "),n("mku-example",[n("template",{slot:"source"},[n("element-demo1")],1),e._v(" "),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div>\n    <mku-tree\n      show-checkbox\n      label=\"name\"\n      children=\"childrenNodes\"\n      :data=\"list\"\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            name: 'node1-1',\n            childrenNodes: [\n              {\n                name: 'node2-1',\n                childrenNodes: [\n                  {\n                    name: 'node3-1'\n                  }\n                ]\n              },\n              {\n                name: 'node2-2',\n                childrenNodes: [\n                  {\n                    name: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            name: 'node1-2',\n            childrenNodes: [\n              {\n                name: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n<\/script>\n")])])])],2),n("h3",[e._v("禁用项")]),e._v(" "),n("p",[e._v("在节点数据上添加disabled属性设置禁用。")]),e._v(" "),n("mku-example",[n("template",{slot:"source"},[n("element-demo2")],1),e._v(" "),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div>\n    <mku-tree\n      show-checkbox\n      node-key=\"id\"\n      :data=\"list\"\n      default-expand-all\n      :default-checked-keys=\"[3]\"\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            id: 1,\n            label: 'node1-1',\n            disabled: true,\n            children: [\n              {\n                id: 2,\n                label: 'node2-1',\n                disabled: true,\n                children: [\n                  {\n                    id: 3,\n                    label: 'node3-1',\n                    disabled: true\n                  }\n                ]\n              },\n              {\n                id: 4,\n                label: 'node2-2',\n                children: [\n                  {\n                    id: 5,\n                    label: 'node3-1'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            id: 6,\n            label: 'node1-2',\n            children: [\n              {\n                id: 7,\n                label: 'node2-1'\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n<\/script>\n")])])])],2),n("h3",[e._v("默认展开和选中")]),e._v(" "),n("p",[e._v("支持默认展开和选中，但是必须要设置node-key属性。\n支持默认展开所有选项")]),e._v(" "),n("mku-example",[n("template",{slot:"source"},[n("element-demo3")],1),e._v(" "),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div>\n    <p>自定义展开和选中：</p>\n    <mku-tree\n      :data=\"list\"\n      show-checkbox\n      node-key=\"id\"\n      :default-expanded-keys=\"[1]\"\n      :default-checked-keys=\"[2, 7]\"\n    />\n\n    <br>\n    <p>展开所有项：</p>\n    <mku-tree\n      :data=\"list\"\n      show-checkbox\n      default-expand-all\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n<\/script>\n")])])])],2),n("h3",[e._v("节点的设置和获取")]),e._v(" "),n("mku-example",[n("template",{slot:"source"},[n("element-demo4")],1),e._v(" "),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <mku-tree\n      ref="tree"\n      :data="list"\n      node-key="id"\n      show-checkbox\n      default-expand-all\n    />\n\n    <br>\n    <div>\n      <mku-button type="primary" @click="setCheckedKeys">通过node-key设置选中</mku-button>\n      <mku-button type="primary" @click="setCheckedNodes">通过node数据节点设置选中</mku-button>\n      <mku-button type="primary" @click="getCheckedKeys">获取选中项的keys数组</mku-button>\n      <mku-button type="primary" @click="getCheckedNodes">获取选中项的数据数组</mku-button>\n      <mku-button type="primary" @click="resetChecked">重置所有选中项目</mku-button>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: \'node1-1\',\n            id: 1,\n            children: [\n              {\n                label: \'node2-1\',\n                id: 2,\n                children: [\n                  {\n                    label: \'node3-1\',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: \'node2-2\',\n                id: 4,\n                children: [\n                  {\n                    label: \'node3-1\',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: \'node1-2\',\n            id: 6,\n            children: [\n              {\n                label: \'node2-1\',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    },\n    methods: {\n      setCheckedKeys () {\n        this.$refs.tree.setCheckedKeys([3])\n      },\n      setCheckedNodes () {\n        this.$refs.tree.setCheckedNodes([\n          { label: \'node3-1\', id: 5 }\n        ])\n      },\n      getCheckedNodes () {\n        const nodes = this.$refs.tree.getCheckedNodes()\n        console.log(nodes)\n        this.$message.success(\'节点获取成功，请在控制台查看\')\n      },\n      getCheckedKeys () {\n        const nodes = this.$refs.tree.getCheckedKeys()\n        console.log(nodes)\n        this.$message.success(\'节点获取成功，请在控制台查看\')\n      },\n      resetChecked () {\n        this.$refs.tree.setCheckedKeys([])\n      }\n    }\n  }\n<\/script>\n')])])])],2),n("h3",[e._v("手风琴模式")]),e._v(" "),n("p",[e._v("手风琴模式，只允许同时展开一个节点。")]),e._v(" "),n("mku-example",[n("template",{slot:"source"},[n("element-demo5")],1),e._v(" "),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div>\n    <mku-tree :data=\"list\" accordion />\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n<\/script>\n")])])])],2),n("h3",[e._v("自定义渲染节点内容")]),e._v(" "),n("mku-example",[n("template",{slot:"source"},[n("element-demo6")],1),e._v(" "),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <div>\n    <mku-tree\n      show-checkbox\n      default-expand-all\n      :data=\"list\"\n      :render-content=\"renderContent\"\n      @toggle-change=\"handleToggle\"\n      @checked-change=\"handleChecked\"\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        list: [\n          {\n            label: 'node1-1',\n            id: 1,\n            children: [\n              {\n                label: 'node2-1',\n                id: 2,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 3\n                  }\n                ]\n              },\n              {\n                label: 'node2-2',\n                id: 4,\n                children: [\n                  {\n                    label: 'node3-1',\n                    id: 5\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            label: 'node1-2',\n            id: 6,\n            children: [\n              {\n                label: 'node2-1',\n                id: 7\n              }\n            ]\n          }\n        ]\n      }\n    },\n    methods: {\n      renderContent (h, { data, parent }) {\n        return h('div', {\n          class: 'doc-tree__item'\n        }, [\n          h('span', {\n            class: 'doc-tree__label'\n          }, data.label),\n          h('mku-button', {\n            style: {\n              margin: '0 10px'\n            },\n            props: {\n              size: 'small'\n            },\n            nativeOn: {\n              click: (e) => this.remove(data, parent, e)\n            }\n          }, '-'),\n          h('mku-button', {\n            props: {\n              size: 'small'\n            },\n            nativeOn: {\n              click: (e) => this.append(data, e)\n            }\n          }, '+')\n        ])\n      },\n      append (data, e) {\n        let children = data.children || []\n        children.push({\n          label: 'children-node'\n        })\n        this.$set(data, 'children', children)\n        e.stopPropagation()\n      },\n      remove (data, parent, e) {\n        const index = parent.indexOf(data)\n        if (index > -1) {\n          parent.splice(index, 1)\n        }\n        e.stopPropagation()\n      },\n      handleToggle (data, node) {\n        console.log(data, node)\n      },\n      handleChecked (nodes, data) {\n        console.log(nodes, data)\n      }\n    }\n  }\n<\/script>\n")])])])],2),n("h3",[e._v("Tree Attributes")]),e._v(" "),e._m(0),e._v(" "),n("h3",[e._v("Tree Events")]),e._v(" "),e._m(1),e._v(" "),n("h3",[e._v("Tree Methods")]),e._v(" "),e._m(2)],1)},staticRenderFns:[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[e._v("参数")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("说明")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("类型")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("可选值")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("默认值")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("必选")])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("data")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("数据对象")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("Array")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("是")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("node-key")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("每个树节点的标识，该值在整个tree内应该是唯一的")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("String | Number")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("label")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("定义子节点名称在data数据对象中的键名")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("String")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("label")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("children")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("定义子节点数据在data数据对象中的键名")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("String")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("children")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("show-checkbox")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("节点可被选择")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("Boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("false")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("default-expanded-keys")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("设置默认的展开项")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("Array")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("default-expand-all")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("设置默认所有项展开")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("Boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("false")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("default-checked-keys")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("设置默认的选中项")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("Array")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("accordion")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("只允许同时展开一个节点")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("Boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("false")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("render-content")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("自定义渲染内容，第一个参数为节点数据，第二个参数为父节点数据")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("expand-on-click-node")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("点击节点时是否可以展开收起")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("Boolean")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("true")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("check-on-click-node")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("点击节点时是否可以选中/取消，仅"),n("code",[e._v("show-checkbox")]),e._v("开始时有效")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("Boolean")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("false")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("否")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("disabled")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("是否禁用")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("Boolean")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("true")]),e._v("、"),n("code",[e._v("false")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("false")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[e._v("true")])])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[e._v("事件名")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("说明")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("回调函数参数")])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("toggle-change")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("展开/收起子节点时触发")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("当前节点")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("checked-change")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("节点选中/取消时触发")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("所有选中节点的数组、当前节点数据")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[e._v("方法名")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("说明")]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[e._v("参数")])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("getCheckedKeys")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("返回所有选中节点的key组成的数组")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("getCheckedNodes")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("返回所有选中节点的数据组成的数组")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("-")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("setCheckedKeys")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("通过key设置选中的节点")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("key数组")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[e._v("setCheckedNodes")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("通过node节点数据设置选中的节点")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("节点数据数组")])])])])}]},c=n("C7Lr")(i,s,!1,null,null,null);t.default=c.exports}});
//# sourceMappingURL=1.45249cb09e24d5b00b9f.js.map